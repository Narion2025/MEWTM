[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "marker-analysis-engine"
version = "0.1.0"
description = "Hochmodernes Analyse-Tool fÃ¼r Beziehungschroniken und Fraud-Erkennung"
authors = [
    {name = "Marker Analysis Team", email = "team@markeranalysis.ai"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Linguistic",
]
dependencies = [
    "pyyaml>=6.0.1",
    "pandas>=2.1.0",
    "numpy>=1.24.0",
    "regex>=2023.8.8",
    "fuzzywuzzy>=0.18.0",
    "python-Levenshtein>=0.21.1",
    "pydantic>=2.4.0",
    "python-dateutil>=2.8.2",
    "python-dotenv>=1.0.0",
    "colorlog>=6.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.1",
    "black>=23.7.0",
    "pylint>=2.17.5",
    "mypy>=1.5.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "pre-commit>=3.3.3",
    "ipython>=8.14.0",
]
docs = [
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
]
viz = [
    "matplotlib>=3.7.2",
    "seaborn>=0.12.2",
    "plotly>=5.16.1",
]

[project.scripts]
marker-analyze = "src.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.pylint.messages_control]
disable = "C0103,C0114,C0115,C0116,R0903"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
pythonpath = [
    ".",
]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/examples/*"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false